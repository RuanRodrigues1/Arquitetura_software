/*
PROJETO: Processador MIPS, autores: DAVI PIRES, JUAN PABOLLO, VITHOR DE CASTRO, RUAN RODRIGUES

ARQUIVO: ctrl

*/
module ctrl_corrigido(
	input[31:0] instrucao, output reg RegDest, output reg Branch, output reg MemRead,
	
	output reg MemToReg, output reg[1:0] ALUOp, output reg MemWrite, output reg ALUSrc,
	
	output reg RegWrite, output reg Jump, output reg Jal_Dest
);

	wire[5:0] opcode = instrucao[31:26];
	
	always@(*) begin

		RegDest=0; Branch=0; MemRead=0; MemToReg=0; ALUOp=2'bxx; MemWrite=0; ALUSrc=0; RegWrite=0; Jump=0; Jal_Dest=0;
		case(opcode)
		
			6'b000000: begin RegDest=1; RegWrite=1; ALUOp=2'b10; end // Tipo R
			
			6'b001000: begin RegWrite=1; ALUSrc=1; ALUOp=2'b00; end // ADDI
			
			6'b100011: begin RegWrite=1; MemRead=1; MemToReg=1; ALUSrc=1; ALUOp=2'b00; end // LW
			
			6'b101011: begin MemWrite=1; ALUSrc=1; ALUOp=2'b00; end // SW
			
			6'b000100: begin Branch=1; ALUOp=2'b01; end // BEQ
			
			6'b000010: begin Jump=1; end // JUMP
			
			6'b000011: begin Jump=1; RegWrite=1; Jal_Dest=1; end // JAL
			
		endcase
	end
endmodule